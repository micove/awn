<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libawn-awn-config-client">
<refmeta>
<refentrytitle role="top_of_page" id="libawn-awn-config-client.top_of_page">awn-config-client</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBAWN Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>awn-config-client</refname>
<refpurpose>The configuration API for both Awn proper and
Awn applets.
<parameter>include</parameter> libawn/awn-config-client.h</refpurpose>
</refnamediv>

<refsynopsisdiv id="libawn-awn-config-client.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="AwnConfigClient">AwnConfigClient</link>;
#define             <link linkend="AWN-CONFIG-CLIENT--CAPS">AWN_CONFIG_CLIENT</link>                   (obj)
                    <link linkend="AwnConfigClientNotifyEntry">AwnConfigClientNotifyEntry</link>;
<link linkend="void">void</link>                (<link linkend="AwnConfigClientNotifyFunc">*AwnConfigClientNotifyFunc</link>)        (<link linkend="AwnConfigClientNotifyEntry">AwnConfigClientNotifyEntry</link> *entry,
                                                         <link linkend="gpointer">gpointer</link> user_data);
#define             <link linkend="AWN-CONFIG-CLIENT-DEFAULT-GROUP--CAPS">AWN_CONFIG_CLIENT_DEFAULT_GROUP</link>
enum                <link linkend="AwnConfigValueType">AwnConfigValueType</link>;
enum                <link linkend="AwnConfigListType">AwnConfigListType</link>;
<link linkend="AwnConfigClient">AwnConfigClient</link> *   <link linkend="awn-config-client-new">awn_config_client_new</link>               ();
<link linkend="AwnConfigClient">AwnConfigClient</link> *   <link linkend="awn-config-client-new-for-applet">awn_config_client_new_for_applet</link>    (<link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gchar">gchar</link> *uid);
<link linkend="void">void</link>                <link linkend="awn-config-client-clear">awn_config_client_clear</link>             (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="awn-config-client-ensure-group">awn_config_client_ensure_group</link>      (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group);
<link linkend="void">void</link>                <link linkend="awn-config-client-notify-add">awn_config_client_notify_add</link>        (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="AwnConfigClientNotifyFunc">AwnConfigClientNotifyFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>            <link linkend="awn-config-client-entry-exists">awn_config_client_entry_exists</link>      (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key);
<link linkend="gboolean">gboolean</link>            <link linkend="awn-config-client-get-bool">awn_config_client_get_bool</link>          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="awn-config-client-set-bool">awn_config_client_set_bool</link>          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> value,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="gfloat">gfloat</link>              <link linkend="awn-config-client-get-float">awn_config_client_get_float</link>         (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="awn-config-client-set-float">awn_config_client_set_float</link>         (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gfloat">gfloat</link> value,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="gint">gint</link>                <link linkend="awn-config-client-get-int">awn_config_client_get_int</link>           (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="awn-config-client-set-int">awn_config_client_set_int</link>           (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> value,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="gchar">gchar</link> *             <link linkend="awn-config-client-get-string">awn_config_client_get_string</link>        (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="awn-config-client-set-string">awn_config_client_set_string</link>        (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gchar">gchar</link> *value,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="GSList">GSList</link> *            <link linkend="awn-config-client-get-list">awn_config_client_get_list</link>          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="AwnConfigListType">AwnConfigListType</link> list_type,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="awn-config-client-set-list">awn_config_client_set_list</link>          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="AwnConfigListType">AwnConfigListType</link> list_type,
                                                         <link linkend="GSList">GSList</link> *value,
                                                         <link linkend="GError">GError</link> **err);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libawn-awn-config-client.description" role="desc">
<title role="desc.title">Description</title>
<para>
A configuration wrapper API that supports both a GConf backend, as well as
a GKeyFile-based backend.  Used for both Awn proper and its applets.</para>
<para>
</para>
</refsect1>

<refsect1 id="libawn-awn-config-client.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AwnConfigClient" role="struct">
<title>AwnConfigClient</title>
<indexterm zone="AwnConfigClient"><primary sortas="AwnConfigClient">AwnConfigClient</primary></indexterm><programlisting>typedef struct _AwnConfigClient AwnConfigClient;</programlisting>
<para>
An opaque structure that facilitates having multiple configuration backends
available to Awn.</para>
<para>
</para></refsect2>
<refsect2 id="AWN-CONFIG-CLIENT--CAPS" role="macro">
<title>AWN_CONFIG_CLIENT()</title>
<indexterm zone="AWN-CONFIG-CLIENT--CAPS"><primary sortas="AWN_CONFIG_CLIENT">AWN_CONFIG_CLIENT</primary></indexterm><programlisting>#define AWN_CONFIG_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), AWN_TYPE_CONFIG_CLIENT, AwnConfigClient))
</programlisting>
<para>
Casts a variable/value to be an <link linkend="AwnConfigClient"><type>AwnConfigClient</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> The variable/value to cast
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AwnConfigClientNotifyEntry" role="struct">
<title>AwnConfigClientNotifyEntry</title>
<indexterm zone="AwnConfigClientNotifyEntry"><primary sortas="AwnConfigClientNotifyEntry">AwnConfigClientNotifyEntry</primary></indexterm><programlisting>typedef struct {
	AwnConfigClient *client;
	gchar *group;
	gchar *key;
	AwnConfigClientValue value;
} AwnConfigClientNotifyEntry;
</programlisting>
<para>
The structure used to transport data to the notification functions of
a configuration entry.</para>
<para>
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="AwnConfigClient">AwnConfigClient</link>&#160;*<structfield>client</structfield>;</term>
<listitem><simpara> The client associated with the entry.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gchar">gchar</link>&#160;*<structfield>group</structfield>;</term>
<listitem><simpara> The group name of the entry.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gchar">gchar</link>&#160;*<structfield>key</structfield>;</term>
<listitem><simpara> The key name of the entry.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="AwnConfigClientValue">AwnConfigClientValue</link>&#160;<structfield>value</structfield>;</term>
<listitem><simpara> The new value of the entry.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="AwnConfigClientNotifyFunc" role="function">
<title>AwnConfigClientNotifyFunc ()</title>
<indexterm zone="AwnConfigClientNotifyFunc"><primary sortas="AwnConfigClientNotifyFunc">AwnConfigClientNotifyFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*AwnConfigClientNotifyFunc)        (<link linkend="AwnConfigClientNotifyEntry">AwnConfigClientNotifyEntry</link> *entry,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
The callback template for configuration change notification functions.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara> The metadata about the new entry value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AWN-CONFIG-CLIENT-DEFAULT-GROUP--CAPS" role="macro">
<title>AWN_CONFIG_CLIENT_DEFAULT_GROUP</title>
<indexterm zone="AWN-CONFIG-CLIENT-DEFAULT-GROUP--CAPS"><primary sortas="AWN_CONFIG_CLIENT_DEFAULT_GROUP">AWN_CONFIG_CLIENT_DEFAULT_GROUP</primary></indexterm><programlisting>#define AWN_CONFIG_CLIENT_DEFAULT_GROUP "DEFAULT"
</programlisting>
<para>
In the <link linkend="GKeyFile"><type>GKeyFile</type></link> backend, the group name with which "top-level" configuration
entries are associated.</para>
<para>
</para></refsect2>
<refsect2 id="AwnConfigValueType" role="enum">
<title>enum AwnConfigValueType</title>
<indexterm zone="AwnConfigValueType"><primary sortas="AwnConfigValueType">AwnConfigValueType</primary></indexterm><programlisting>typedef enum {
	AWN_CONFIG_VALUE_TYPE_NULL = -1,
	AWN_CONFIG_VALUE_TYPE_BOOL,
	AWN_CONFIG_VALUE_TYPE_FLOAT,
	AWN_CONFIG_VALUE_TYPE_INT,
	AWN_CONFIG_VALUE_TYPE_STRING,
	AWN_CONFIG_VALUE_TYPE_LIST_BOOL,
	AWN_CONFIG_VALUE_TYPE_LIST_FLOAT,
	AWN_CONFIG_VALUE_TYPE_LIST_INT,
	AWN_CONFIG_VALUE_TYPE_LIST_STRING
} AwnConfigValueType;
</programlisting>
<para>
Indicates the value type of a particular configuration entry.</para>
<para>
</para><variablelist role="enum">
<varlistentry id="AWN-CONFIG-VALUE-TYPE-NULL--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_NULL</literal></term>
<listitem><simpara> Indicates that the configuration value type
is unknown.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-BOOL--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_BOOL</literal></term>
<listitem><simpara> Indicates that the configuration value type
is boolean.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-FLOAT--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_FLOAT</literal></term>
<listitem><simpara> Indicates that the configuration value type
is float.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-INT--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_INT</literal></term>
<listitem><simpara> Indicates that the configuration value type
is integer.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-STRING--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_STRING</literal></term>
<listitem><simpara> Indicates that the configuration value type
is string.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-LIST-BOOL--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_LIST_BOOL</literal></term>
<listitem><simpara> Indicates that the configuration value
type is list whose items are booleans.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-LIST-FLOAT--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_LIST_FLOAT</literal></term>
<listitem><simpara> Indicates that the configuration value
type is list whose items are floats.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-LIST-INT--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_LIST_INT</literal></term>
<listitem><simpara> Indicates that the configuration value
type is list whose items are integers.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-VALUE-TYPE-LIST-STRING--CAPS" role="constant">
<term><literal>AWN_CONFIG_VALUE_TYPE_LIST_STRING</literal></term>
<listitem><simpara> Indicates that the configuration value
type is list whose items are strings.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="AwnConfigListType" role="enum">
<title>enum AwnConfigListType</title>
<indexterm zone="AwnConfigListType"><primary sortas="AwnConfigListType">AwnConfigListType</primary></indexterm><programlisting>typedef enum {
	AWN_CONFIG_CLIENT_LIST_TYPE_BOOL,
	AWN_CONFIG_CLIENT_LIST_TYPE_FLOAT,
	AWN_CONFIG_CLIENT_LIST_TYPE_INT,
	AWN_CONFIG_CLIENT_LIST_TYPE_STRING
} AwnConfigListType;
</programlisting>
<para>
Indicates the value type of every item in a configuration entry of
type "list".</para>
<para>
</para><variablelist role="enum">
<varlistentry id="AWN-CONFIG-CLIENT-LIST-TYPE-BOOL--CAPS" role="constant">
<term><literal>AWN_CONFIG_CLIENT_LIST_TYPE_BOOL</literal></term>
<listitem><simpara> Indicates that the list value type
is boolean.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-CLIENT-LIST-TYPE-FLOAT--CAPS" role="constant">
<term><literal>AWN_CONFIG_CLIENT_LIST_TYPE_FLOAT</literal></term>
<listitem><simpara> Indicates that the list value type
is float.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-CLIENT-LIST-TYPE-INT--CAPS" role="constant">
<term><literal>AWN_CONFIG_CLIENT_LIST_TYPE_INT</literal></term>
<listitem><simpara> Indicates that the list value type
is integer.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-CONFIG-CLIENT-LIST-TYPE-STRING--CAPS" role="constant">
<term><literal>AWN_CONFIG_CLIENT_LIST_TYPE_STRING</literal></term>
<listitem><simpara> Indicates that the list value type
is string.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-new" role="function">
<title>awn_config_client_new ()</title>
<indexterm zone="awn-config-client-new"><primary sortas="awn_config_client_new">awn_config_client_new</primary></indexterm><programlisting><link linkend="AwnConfigClient">AwnConfigClient</link> *   awn_config_client_new               ();</programlisting>
<para>
Retrieves the configuration client for Awn proper.  If none exists,
one is created.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a singleton instance of <link linkend="AwnConfigClient"><type>AwnConfigClient</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-new-for-applet" role="function">
<title>awn_config_client_new_for_applet ()</title>
<indexterm zone="awn-config-client-new-for-applet"><primary sortas="awn_config_client_new_for_applet">awn_config_client_new_for_applet</primary></indexterm><programlisting><link linkend="AwnConfigClient">AwnConfigClient</link> *   awn_config_client_new_for_applet    (<link linkend="gchar">gchar</link> *name,
                                                         <link linkend="gchar">gchar</link> *uid);</programlisting>
<para>
Creates a configuration client for the applet named in the parameter.  If
<parameter>uid</parameter> is not defined, it is implied that the applet is a singleton.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> The name of the applet.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara> The unique identifier for the applet (used for positioning on the
dock).  Optional value (i.e., may be <link linkend="NULL--CAPS"><literal>NULL</literal></link>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> an instance of <link linkend="AwnConfigClient"><type>AwnConfigClient</type></link> for the specified applet.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-clear" role="function">
<title>awn_config_client_clear ()</title>
<indexterm zone="awn-config-client-clear"><primary sortas="awn_config_client_clear">awn_config_client_clear</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_clear             (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Removes all of the configuration entries from the client.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> The pointer to the <link linkend="GError"><type>GError</type></link> structure that contains an error
message on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-ensure-group" role="function">
<title>awn_config_client_ensure_group ()</title>
<indexterm zone="awn-config-client-ensure-group"><primary sortas="awn_config_client_ensure_group">awn_config_client_ensure_group</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_ensure_group      (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group);</programlisting>
<para>
Ensures that the <parameter>group</parameter> named has been created in the configuration backend.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client to be queried.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-notify-add" role="function">
<title>awn_config_client_notify_add ()</title>
<indexterm zone="awn-config-client-notify-add"><primary sortas="awn_config_client_notify_add">awn_config_client_notify_add</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_notify_add        (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="AwnConfigClientNotifyFunc">AwnConfigClientNotifyFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Associates a callback function with a group and a key, which is called
when that key's value has been modified in some way.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> The function that is called when the key value has been modified.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> Extra data that is passed to the callback.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-entry-exists" role="function">
<title>awn_config_client_entry_exists ()</title>
<indexterm zone="awn-config-client-entry-exists"><primary sortas="awn_config_client_entry_exists">awn_config_client_entry_exists</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            awn_config_client_entry_exists      (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key);</programlisting>
<para>
Determines whether the group and key exists in the configuration backend.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be queried.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-get-bool" role="function">
<title>awn_config_client_get_bool ()</title>
<indexterm zone="awn-config-client-get-bool"><primary sortas="awn_config_client_get_bool">awn_config_client_get_bool</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            awn_config_client_get_bool          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Retrieves the value (as a boolean) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be queried.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a boolean value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-set-bool" role="function">
<title>awn_config_client_set_bool ()</title>
<indexterm zone="awn-config-client-set-bool"><primary sortas="awn_config_client_set_bool">awn_config_client_set_bool</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_set_bool          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> value,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Changes the value (as a boolean) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> The new value of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-get-float" role="function">
<title>awn_config_client_get_float ()</title>
<indexterm zone="awn-config-client-get-float"><primary sortas="awn_config_client_get_float">awn_config_client_get_float</primary></indexterm><programlisting><link linkend="gfloat">gfloat</link>              awn_config_client_get_float         (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Retrieves the value (as a float) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be queried.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a float value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-set-float" role="function">
<title>awn_config_client_set_float ()</title>
<indexterm zone="awn-config-client-set-float"><primary sortas="awn_config_client_set_float">awn_config_client_set_float</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_set_float         (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gfloat">gfloat</link> value,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Changes the value (as a float) of the specified group and key.
If you need double precision, use a string.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> The new value of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-get-int" role="function">
<title>awn_config_client_get_int ()</title>
<indexterm zone="awn-config-client-get-int"><primary sortas="awn_config_client_get_int">awn_config_client_get_int</primary></indexterm><programlisting><link linkend="gint">gint</link>                awn_config_client_get_int           (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Retrieves the value (as an integer) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be queried.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> an integer value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-set-int" role="function">
<title>awn_config_client_set_int ()</title>
<indexterm zone="awn-config-client-set-int"><primary sortas="awn_config_client_set_int">awn_config_client_set_int</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_set_int           (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> value,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Changes the value (as an integer) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> The new value of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-get-string" role="function">
<title>awn_config_client_get_string ()</title>
<indexterm zone="awn-config-client-get-string"><primary sortas="awn_config_client_get_string">awn_config_client_get_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             awn_config_client_get_string        (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Retrieves the value (as a string) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be queried.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly allocated string value.  The caller is responsible
for freeing the memory.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-set-string" role="function">
<title>awn_config_client_set_string ()</title>
<indexterm zone="awn-config-client-set-string"><primary sortas="awn_config_client_set_string">awn_config_client_set_string</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_set_string        (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gchar">gchar</link> *value,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Changes the value (as a string) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> The new value of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-get-list" role="function">
<title>awn_config_client_get_list ()</title>
<indexterm zone="awn-config-client-get-list"><primary sortas="awn_config_client_get_list">awn_config_client_get_list</primary></indexterm><programlisting><link linkend="GSList">GSList</link> *            awn_config_client_get_list          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="AwnConfigListType">AwnConfigListType</link> list_type,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Retrieves the value (as a <link linkend="GSList"><type>GSList</type></link>) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be queried.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list_type</parameter>&#160;:</term>
<listitem><simpara> The value type of every item in the list.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly allocated list value.  The caller is responsible
for freeing the memory.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-config-client-set-list" role="function">
<title>awn_config_client_set_list ()</title>
<indexterm zone="awn-config-client-set-list"><primary sortas="awn_config_client_set_list">awn_config_client_set_list</primary></indexterm><programlisting><link linkend="void">void</link>                awn_config_client_set_list          (<link linkend="AwnConfigClient">AwnConfigClient</link> *client,
                                                         const <link linkend="gchar">gchar</link> *group,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="AwnConfigListType">AwnConfigListType</link> list_type,
                                                         <link linkend="GSList">GSList</link> *value,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>
Changes the value (as a list of values) of the specified group and key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter>&#160;:</term>
<listitem><simpara> The configuration client that is to be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group</parameter>&#160;:</term>
<listitem><simpara> The name of the group.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara> The name of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list_type</parameter>&#160;:</term>
<listitem><simpara> The value type of every item in the list.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara> The new value of the key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara> A pointer to a <link linkend="GError"><type>GError</type></link> structure, which contains an error message
if the function fails.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
